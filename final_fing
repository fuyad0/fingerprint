#include <Adafruit_Fingerprint.h>
#include <ESP8266WiFi.h>
#include <ESP8266WebServer.h>
#include <EEPROM.h>
#include <ESP8266HTTPClient.h>

WiFiClient wifiClient;
ESP8266WebServer server(80);

// WiFi তথ্য
const char* ssid = "TP-Link";
const char* password = "85413419";

// পাসওয়ার্ড এবং ফিঙ্গারপ্রিন্ট সেটিংস
const String adminPassword = "1234";  // পাসওয়ার্ড সেট করুন
//api
String apiUrl = "http://192.168.0.107/upload_fingerprint.php";

// সফটওয়্যার সিরিয়াল সেটআপ
#if (defined(__AVR__) || defined(ESP8266)) && !defined(__AVR_ATmega2560__)
SoftwareSerial mySerial(13, 15);  // RX, TX
#else
#define mySerial Serial1
#endif

Adafruit_Fingerprint finger = Adafruit_Fingerprint(&mySerial);

void setup() {
  Serial.begin(9600);
  while (!Serial);
  delay(100);
  Serial.println("\n\nFingerprint Sensor Test");

  // WiFi সংযোগ
  WiFi.begin(ssid, password);
  Serial.print("Connecting to WiFi");
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("\nWiFi connected");
  Serial.print("Sensor IP Address: ");
  Serial.println(WiFi.localIP());

  // ফিঙ্গারপ্রিন্ট সেন্সর আরম্ভ করা
  finger.begin(57600);
  delay(5);
  if (finger.verifyPassword()) {
    Serial.println("Fingerprint sensor found!");
    Serial.println(F("Reading sensor parameters"));
    finger.getParameters();
    Serial.print(F("Status: 0x")); Serial.println(finger.status_reg, HEX);
    Serial.print(F("Capacity: ")); Serial.println(finger.capacity);
    Serial.print(F("Security level: ")); Serial.println(finger.security_level);
    Serial.print(F("Device address: ")); Serial.println(finger.device_addr, HEX);
    Serial.print(F("Baud rate: ")); Serial.println(finger.baud_rate);

    finger.getTemplateCount();

    if (finger.templateCount == 0) {
      Serial.print("Sensor doesn't contain any fingerprint data. Please add fingerprint first.");
    }
    else {
        Serial.print("Sensor contains "); Serial.print(finger.templateCount); Serial.println(" templates");
    }
  } else {
    Serial.println("Fingerprint sensor not found :(");
    while (1) { delay(1); }
  }

  // ওয়েব সার্ভার সেটআপ
  server.on("/", []() {
    String html = "<!DOCTYPE html>"
                  "<html lang='en'><head><meta charset='UTF-8'><meta name='viewport' content='width=device-width, initial-scale=1.0'>"
                  "<title>Fingerprint Management</title><style>body { font-family: Arial, sans-serif; display: flex; flex-direction: column; align-items: center; margin-top: 50px; background-color: #f5f5f5; } h1 { color: #333; } .button { padding: 10px 20px; margin: 10px; font-size: 16px; cursor: pointer; border: none; border-radius: 5px; background-color: #4CAF50; color: white; } .button.delete { background-color: #f44336; } .status { margin-top: 20px; font-size: 18px; color: #333; } input { padding: 10px; margin: 10px; font-size: 16px; border-radius: 5px; border: 1px solid #ccc; }</style></head>"
                  "<body><h1>Fingerprint Management</h1>"
                  "<input type='text' id='fingerprintID' placeholder='Enter Fingerprint ID' />"
                  "<input type='password' id='password' placeholder='Enter Password' />"
                  "<button class='button' onclick='sendRequest(\"add\")'>Add Fingerprint</button>"
                  "<button class='button delete' onclick='sendRequest(\"delete\")'>Delete Fingerprint</button>"
                  "<div class='status' id='status'>Status: Waiting for action...</div>"
                  "<script>function sendRequest(action) { const id = document.getElementById('fingerprintID').value; const password = document.getElementById('password').value; if (!id || !password) { document.getElementById('status').innerText = 'Status: Please enter ID and Password.'; return; } let url = action === 'add' ? `/add_fingerprint?id=${id}&password=${password}` : `/delete_fingerprint?id=${id}&password=${password}`; fetch(url, { method: 'GET' }).then(response => response.text()).then(data => { document.getElementById('status').innerText = 'Status: ' + data; }).catch(error => { document.getElementById('status').innerText = 'Status: Error - ' + error; }); }</script>"
                  "</body></html>";
    server.send(200, "text/html", html);
  });

  server.on("/add_fingerprint", []() {
    String id = server.arg("id");
    String password = server.arg("password");

    if (password != adminPassword) {
      server.send(403, "text/plain", "Error: Invalid Password");
      return;
    }

    if (addFingerprint(id.toInt())) {
      server.send(200, "text/plain", "Fingerprint Added Successfully");
    } else {
      server.send(400, "text/plain", "Error: Failed to add fingerprint or ID already exists");
    }
  });

  server.on("/delete_fingerprint", []() {
    String id = server.arg("id");
    String password = server.arg("password");

    if (password != adminPassword) {
      server.send(403, "text/plain", "Error: Invalid Password");
      return;
    }

    if (deleteFingerprint(id.toInt())) {
      server.send(200, "text/plain", "Fingerprint Deleted Successfully");
    } else {
      server.send(400, "text/plain", "Error: Failed to delete fingerprint");
    }
  });

  server.begin();
  Serial.println("Server started");
  Serial.println("Waiting for valid finger...");
}

void loop() {
  server.handleClient();
  getFingerprintID();
  delay(500);
}

// নতুন ফাংশন: আইডি তে ফিঙ্গারপ্রিন্ট রয়েছে কিনা পরীক্ষা করে
bool checkFingerprintExists(int id) {
  int p = finger.loadModel(id);
  return p == FINGERPRINT_OK;
}

bool fingerEnroll(int id) {
  int p = -1;
  Serial.println("Place finger on the sensor");

  while (p != FINGERPRINT_OK) {
    p = finger.getImage();
    if (p == FINGERPRINT_NOFINGER) {
      Serial.print(".");
      delay(100);
    } else if (p == FINGERPRINT_PACKETRECIEVEERR) {
      Serial.println("Communication error");
      return false;
    } else if (p == FINGERPRINT_IMAGEFAIL) {
      Serial.println("Imaging error");
      return false;
    }
  }

  p = finger.image2Tz(1);
  if (p != FINGERPRINT_OK) return false;

  Serial.println("Remove finger");
  delay(1000);
  Serial.println("Place same finger again");

  p = finger.getImage();
  if (p == FINGERPRINT_NOFINGER) {
    Serial.print(".");
    delay(100);
  } else if (p == FINGERPRINT_PACKETRECIEVEERR) {
    Serial.println("Communication error");
    return false;
  } else if (p == FINGERPRINT_IMAGEFAIL) {
    Serial.println("Imaging error");
    return false;
  }else if (p == FINGERPRINT_ENROLLMISMATCH) {
    Serial.println("Fingerprints did not match");
    return p;
  }

  p = finger.image2Tz(2);
  if (p != FINGERPRINT_OK) return false;

  p = finger.createModel();
  if (p != FINGERPRINT_OK) return false;

  p = finger.storeModel(id);
  return p == FINGERPRINT_OK;
}

bool addFingerprint(int id) {
  if (id < 0 || id >= 127) return false;

  // ID তে ফিঙ্গারপ্রিন্ট রয়েছে কিনা চেক করুন
  if (checkFingerprintExists(id)) {
    Serial.println("Error: ID already has a fingerprint stored.");
    return false;
  }

  if (fingerEnroll(id)) {
    Serial.print("Added ID: "); Serial.println(id);
    return true;
  }
  return false;
}

bool deleteFingerprint(int id) {
  if (id < 0 || id >= 127) return false;
  Serial.print("Deleting ID: "); Serial.println(id);
  int p = finger.deleteModel(id);
  return p == FINGERPRINT_OK;
}

uint8_t getFingerprintID() {
  uint8_t p = finger.getImage();
  switch (p) {
    case FINGERPRINT_OK:
      Serial.println("Image taken");
      break;
    case FINGERPRINT_NOFINGER:
      return p;
    case FINGERPRINT_PACKETRECIEVEERR:
      Serial.println("Communication error");
      return p;
    case FINGERPRINT_IMAGEFAIL:
      Serial.println("Imaging error");
      return p;
    default:
      return p;
  }

  p = finger.image2Tz();
  if (p != FINGERPRINT_OK) return p;

  p = finger.fingerSearch();
  if (p == FINGERPRINT_OK) {
    Serial.print("Found ID #"); Serial.print(finger.fingerID);
    Serial.print(" with confidence of "); Serial.println(finger.confidence);
    if (WiFi.status() == WL_CONNECTED) { 
      HTTPClient http;
      http.begin(wifiClient, apiUrl);
      http.addHeader("Content-Type", "application/json");

      String postData = "{\"id\": " + String(finger.fingerID) + "}";
      int httpResponseCode = http.POST(postData);
      Serial.println(httpResponseCode > 0 ? "Data sent successfully" : "Error sending data");
      http.end();
    }
  } else if (p == FINGERPRINT_NOTFOUND) {
    Serial.println("No match found");
  } else {
    Serial.println("Unknown error");
  }
  return finger.fingerID;
}
